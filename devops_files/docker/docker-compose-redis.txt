# mkdir composetest
# cd composetest
# Create a file app.py as below:
------------------------------------------------------------------------------------
import time

import redis
from flask import Flask

app = Flask(__name__)
cache = redis.Redis(host='redis', port=6379)

def get_hit_count():
    retries = 5
    while True:
        try:
            return cache.incr('hits')
        except redis.exceptions.ConnectionError as exc:
            if retries == 0:
                raise exc
            retries -= 1
            time.sleep(0.5)

@app.route('/')
def hello():
    count = get_hit_count()
    return 'Hello World! I have been seen {} times.\n'.format(count)
------------------------------------------------------------------------------------

--> Create another file called requirements.txt as below:
 # flask
# redis

--> In your project directory, create a file named Dockerfile
#----------------------------- 
#syntax=docker/dockerfile:1
FROM python:3.7-alpine
WORKDIR /code
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0
RUN apk add --no-cache gcc musl-dev linux-headers
COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt
EXPOSE 5000
COPY . .
CMD ["flask", "run"]
============================

--> Services to compose file:
Create a file called docker-compose.yml in your project directory and paste the following:

-----------------------------------
version: "3.9"
services:
  web:
    build: .
    ports:
      - "8000:5000"
  redis:
    image: "redis:alpine"
----------------------------------

--> Build and run your app with Compose


# docker compose up 

Detach mode
# docker compose up -d



Open Browser : localhost:8000
