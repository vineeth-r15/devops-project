	 Git conflict demo:
        # first switch to branch main
	then
	# git branch c1
	madan@madan-virtual-machine:~/git/myfirstrepo$ Switched to branch 'c1'
	
	madan@madan-virtual-machine:~/git/myfirstrepo$ git commit -m "modified s1.txt"
	[c1 76a2670] modified s1.txt
	 1 file changed, 1 insertion(+), 1 deletion(-)
	madan@madan-virtual-machine:~/git/myfirstrepo$ git push origin c1
	Username for 'https://github.com': madandevops11
	Password for 'https://madandevops11@github.com':
	Enumerating objects: 5, done.
	Counting objects: 100% (5/5), done.
	Delta compression using up to 4 threads
	Compressing objects: 100% (2/2), done.
	Writing objects: 100% (3/3), 263 bytes | 263.00 KiB/s, done.
	Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
	remote: Resolving deltas: 100% (1/1), completed with 1 local object.
	remote:
	remote: Create a pull request for 'c1' on GitHub by visiting:
	remote:      https://github.com/madandevops11/myfirstrepo/pull/new/c1
	remote:
	To https://github.com/madandevops11/myfirstrepo.git
	 * [new branch]      c1 -> c1
	madan@madan-virtual-machine:~/git/myfirstrepo$ git checkout main
	Switched to branch 'main'
	Your branch is up to date with 'origin/main'.
	madan@madan-virtual-machine:~/git/myfirstrepo$ ls
	file1.txt  file2.txt  readme.txt  s1.txt
	madan@madan-virtual-machine:~/git/myfirstrepo$ vi s1.txt
	madan@madan-virtual-machine:~/git/myfirstrepo$ git add .
	madan@madan-virtual-machine:~/git/myfirstrepo$ git commit -m "modified s1.txt in main"
	[main 2fb7dd8] modified s1.txt in main
	 1 file changed, 1 insertion(+), 1 deletion(-)
	madan@madan-virtual-machine:~/git/myfirstrepo$ git push origin main
	Username for 'https://github.com': madandevops11
	Password for 'https://madandevops11@github.com':
	Enumerating objects: 5, done.
	Counting objects: 100% (5/5), done.
	Delta compression using up to 4 threads
	Compressing objects: 100% (2/2), done.
	Writing objects: 100% (3/3), 270 bytes | 270.00 KiB/s, done.
	Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
	remote: Resolving deltas: 100% (1/1), completed with 1 local object.
	To https://github.com/madandevops11/myfirstrepo.git
	   8ee3cad..2fb7dd8  main -> main
	madan@madan-virtual-machine:~/git/myfirstrepo$
	
	
	Now raise PR in git hub from c1 to main branch which will show conflicts.
	
	
	
=============================================	
 Git stash and git rebase 


Git rebase example:

nothing added to commit but untracked files present (use "git add" to track)
madan@madan-virtual-machine:~/git/myfirstrepo$ git add .
madan@madan-virtual-machine:~/git/myfirstrepo$ git commit -m "added s2.txt"
[c2 92446fe] added s2.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 s2.txt
madan@madan-virtual-machine:~/git/myfirstrepo$ git checkout c1
Switched to branch 'c1'
madan@madan-virtual-machine:~/git/myfirstrepo$ git rebase c2 c1  (source_branch target_branch)
Successfully rebased and updated refs/heads/c1.
madan@madan-virtual-machine:~/git/myfirstrepo$









Git stash:

madan@madan-virtual-machine:~/git/myfirstrepo$ vi readme.txt
madan@madan-virtual-machine:~/git/myfirstrepo$ git status
On branch c1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   readme.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        c1.txt

no changes added to commit (use "git add" and/or "git commit -a")
madan@madan-virtual-machine:~/git/myfirstrepo$ git stash
Saved working directory and index state WIP on c1: 92446fe added s2.txt
madan@madan-virtual-machine:~/git/myfirstrepo$ ls
c1.txt  file1.txt  file2.txt  my-app  readme.txt  s1.txt  s2.txt
madan@madan-virtual-machine:~/git/myfirstrepo$ cat readme.txt
hi this is my first repository




Git reset:
madan@madan-virtual-machine:~/git/repo2$ ls
file1.txt  file2.txt  file3.txt  file4  file45  readme
madan@madan-virtual-machine:~/git/repo2$ touch file9
madan@madan-virtual-machine:~/git/repo2$ git status
On branch b2
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file9

nothing added to commit but untracked files present (use "git add" to track)
madan@madan-virtual-machine:~/git/repo2$ git add file9
madan@madan-virtual-machine:~/git/repo2$ git status
On branch b2
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file9

madan@madan-virtual-machine:~/git/repo2$ ls
file1.txt  file2.txt  file3.txt  file4  file45  file9  readme
madan@madan-virtual-machine:~/git/repo2$ git reset --hard
HEAD is now at 594b03f added file4,45
madan@madan-virtual-machine:~/git/repo2$ ls
file1.txt  file2.txt  file3.txt  file4  file45  readme
madan@madan-virtual-machine:~/git/repo2$ git branch
  b1
* b2






Moral : c1 branch file will be rebased(updated) with c2 branch.

